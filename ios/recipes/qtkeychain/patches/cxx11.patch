--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -1,5 +1,8 @@
-cmake_minimum_required(VERSION 2.8.11)
+cmake_minimum_required(VERSION 3.3.0)
 project(qtkeychain)
+set (CMAKE_CXX_STANDARD 11)
+set(CMAKE_CXX_COMPILE_FEATURES "cxx_std_98;cxx_template_template_parameters;cxx_std_11;cxx_alias_templates;cxx_alignas;cxx_alignof;cxx_attributes;cxx_auto_type;cxx_constexpr;cxx_decltype;cxx_decltype_incomplete_return_types;cxx_default_function_template_args;cxx_defaulted_functions;cxx_defaulted_move_initializers;cxx_delegating_constructors;cxx_deleted_functions;cxx_enum_forward_declarations;cxx_explicit_conversions;cxx_extended_friend_declarations;cxx_extern_templates;cxx_final;cxx_func_identifier;cxx_generalized_initializers;cxx_inheriting_constructors;cxx_inline_namespaces;cxx_lambdas;cxx_local_type_template_args;cxx_long_long_type;cxx_noexcept;cxx_nonstatic_member_init;cxx_nullptr;cxx_override;cxx_range_for;cxx_raw_string_literals;cxx_reference_qualified_functions;cxx_right_angle_brackets;cxx_rvalue_references;cxx_sizeof_member;cxx_static_assert;cxx_strong_enums;cxx_thread_local;cxx_trailing_return_types;cxx_unicode_literals;cxx_uniform_initialization;cxx_unrestricted_unions;cxx_user_literals;cxx_variadic_macros;cxx_variadic_templates;cxx_std_14;cxx_aggregate_default_initializers;cxx_attribute_deprecated;cxx_binary_literals;cxx_contextual_conversions;cxx_decltype_auto;cxx_digit_separators;cxx_generic_lambdas;cxx_lambda_init_captures;cxx_relaxed_constexpr;cxx_return_type_deduction;cxx_variable_templates;cxx_std_17")
+

 include(FindPkgConfig)

@@ -135,7 +138,7 @@

 if(APPLE)
     if(IOS)
-        list(APPEND qtkeychain_SOURCES keychain_ios.cpp)
+        list(APPEND qtkeychain_SOURCES keychain_ios.mm)
     else()
         list(APPEND qtkeychain_SOURCES keychain_mac.cpp)
     endif()
@@ -215,8 +215,6 @@
 )

 set_target_properties(${QTKEYCHAIN_TARGET_NAME} PROPERTIES
-    VERSION ${QTKEYCHAIN_VERSION}
-    SOVERSION ${QTKEYCHAIN_SOVERSION}
     MACOSX_RPATH 1
     INSTALL_NAME_DIR "${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}"
     INSTALL_RPATH_USE_LINK_PATH TRUE
@@ -234,38 +237,3 @@
     add_executable( testclient testclient.cpp )
     target_link_libraries( testclient ${QTKEYCHAIN_TARGET_NAME})
 endif()
-
-
-###
-### CMake config file
-###
-
-ecm_configure_package_config_file("${CMAKE_CURRENT_SOURCE_DIR}/QtKeychainConfig.cmake.in"
-  "${CMAKE_CURRENT_BINARY_DIR}/Qt${QTKEYCHAIN_VERSION_INFIX}KeychainConfig.cmake"
-  INSTALL_DESTINATION Qt${QTKEYCHAIN_VERSION_INFIX}Keychain)
-
-ecm_setup_version("${QTKEYCHAIN_VERSION}" VARIABLE_PREFIX SNORE
-  PACKAGE_VERSION_FILE "${CMAKE_CURRENT_BINARY_DIR}/Qt${QTKEYCHAIN_VERSION_INFIX}KeychainConfigVersion.cmake"
-  SOVERSION ${QTKEYCHAIN_VERSION})
-
-if(UNIX AND NOT APPLE AND NOT ANDROID)
-    set(PRI_EXTRA_DEPS "dbus")
-endif()
-ecm_generate_pri_file(BASE_NAME Qt${QTKEYCHAIN_VERSION_INFIX}Keychain
-  LIB_NAME ${QTKEYCHAIN_TARGET_NAME}
-  DEPS "core ${PRI_EXTRA_DEPS}"
-  INCLUDE_INSTALL_DIR ${CMAKE_INSTALL_INCLUDEDIR}
-  FILENAME_VAR pri_filename)
-
-install(FILES ${pri_filename} DESTINATION ${ECM_MKSPECS_INSTALL_DIR})
-
-
-install(EXPORT Qt${QTKEYCHAIN_VERSION_INFIX}KeychainLibraryDepends
-    DESTINATION "${CMAKE_INSTALL_LIBDIR}/cmake/Qt${QTKEYCHAIN_VERSION_INFIX}Keychain"
-)
-
-install(FILES ${CMAKE_CURRENT_BINARY_DIR}/Qt${QTKEYCHAIN_VERSION_INFIX}KeychainConfig.cmake
-              ${CMAKE_CURRENT_BINARY_DIR}/Qt${QTKEYCHAIN_VERSION_INFIX}KeychainConfigVersion.cmake
-        DESTINATION ${CMAKE_INSTALL_LIBDIR}/cmake/Qt${QTKEYCHAIN_VERSION_INFIX}Keychain
-)
-
